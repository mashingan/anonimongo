buildInfo	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#buildInfo,Database[Socket]	diagnostic: buildInfo(db: Database[Socket]): BsonDocument	
buildInfo	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#buildInfo,Database[AsyncSocket]	diagnostic: buildInfo(db: Database[AsyncSocket]): Future[BsonDocument]	
collStats	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#collStats,Database[Socket],string,int	diagnostic: collStats(db: Database[Socket]; coll: string; scale = 1024): BsonDocument	
collStats	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#collStats,Database[AsyncSocket],string,int	diagnostic: collStats(db: Database[AsyncSocket]; coll: string; scale = 1024): Future[\n    BsonDocument]	
connPoolStats	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#connPoolStats,Database[Socket]	diagnostic: connPoolStats(db: Database[Socket]): BsonDocument	
connPoolStats	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#connPoolStats,Database[AsyncSocket]	diagnostic: connPoolStats(db: Database[AsyncSocket]): Future[BsonDocument]	
connectionStatus	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#connectionStatus,Database[Socket]	diagnostic: connectionStatus(db: Database[Socket]; showPriv = false): BsonDocument	
connectionStatus	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#connectionStatus,Database[AsyncSocket]	diagnostic: connectionStatus(db: Database[AsyncSocket]; showPriv = false): Future[\n    BsonDocument]	
dataSize	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#dataSize,Database[Socket],string	diagnostic: dataSize(db: Database[Socket]; coll: string; pattern = bson({&quot;_id&quot;: 1});\n         min = bson(); max = bson(); estimate = false): BsonDocument	
dataSize	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#dataSize,Database[AsyncSocket],string	diagnostic: dataSize(db: Database[AsyncSocket]; coll: string; pattern = bson({&quot;_id&quot;: 1});\n         min = bson(); max = bson(); estimate = false): Future[BsonDocument]	
dbHash	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#dbHash,Database[Socket],seq[string]	diagnostic: dbHash(db: Database[Socket]; colls: seq[string] = @[]): BsonDocument	
dbHash	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#dbHash,Database[AsyncSocket],seq[string]	diagnostic: dbHash(db: Database[AsyncSocket]; colls: seq[string] = @[]): Future[BsonDocument]	
dbStats	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#dbStats,Database[Socket],int	diagnostic: dbStats(db: Database[Socket]; scale = 1024): BsonDocument	
dbStats	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#dbStats,Database[AsyncSocket],int	diagnostic: dbStats(db: Database[AsyncSocket]; scale = 1024): Future[BsonDocument]	
explain	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#explain,Database[Socket],string	diagnostic: explain(db: Database[Socket]; cmd = bson(); verbosity = &quot;allPlansExecution&quot;;\n        command = ckRead): BsonDocument	
explain	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#explain,Database[AsyncSocket],string	diagnostic: explain(db: Database[AsyncSocket]; cmd = bson();\n        verbosity = &quot;allPlansExecution&quot;; command = ckRead): Future[BsonDocument]	
getCmdLineOpts	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#getCmdLineOpts,Database[Socket]	diagnostic: getCmdLineOpts(db: Database[Socket]): BsonDocument	
getCmdLineOpts	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#getCmdLineOpts,Database[AsyncSocket]	diagnostic: getCmdLineOpts(db: Database[AsyncSocket]): Future[BsonDocument]	
getLog	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#getLog,Database[Socket],string	diagnostic: getLog(db: Database[Socket]; filter = &quot;global&quot;): BsonDocument	
getLog	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#getLog,Database[AsyncSocket],string	diagnostic: getLog(db: Database[AsyncSocket]; filter = &quot;global&quot;): Future[BsonDocument]	
getLogFilters	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#getLogFilters,Database[Socket]	diagnostic: getLogFilters(db: Database[Socket]): seq[string]	
getLogFilters	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#getLogFilters,Database[AsyncSocket]	diagnostic: getLogFilters(db: Database[AsyncSocket]): Future[seq[string]]	
hostInfo	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#hostInfo,Database[Socket]	diagnostic: hostInfo(db: Database[Socket]): BsonDocument	
hostInfo	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#hostInfo,Database[AsyncSocket]	diagnostic: hostInfo(db: Database[AsyncSocket]): Future[BsonDocument]	
listCommands	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#listCommands,Database[Socket]	diagnostic: listCommands(db: Database[Socket]): BsonDocument	
listCommands	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#listCommands,Database[AsyncSocket]	diagnostic: listCommands(db: Database[AsyncSocket]): Future[BsonDocument]	
ping	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#ping,Database[Socket]	diagnostic: ping(db: Database[Socket]): BsonDocument	
ping	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#ping,Database[AsyncSocket]	diagnostic: ping(db: Database[AsyncSocket]): Future[BsonDocument]	
profile	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#profile,Database[Socket],int,int,float	diagnostic: profile(db: Database[Socket]; level = 0; slowms = 100; sampleRate = 1.0): BsonDocument	
profile	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#profile,Database[AsyncSocket],int,int,float	diagnostic: profile(db: Database[AsyncSocket]; level = 0; slowms = 100; sampleRate = 1.0): Future[\n    BsonDocument]	
serverStat	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#serverStat,Database[Socket]	diagnostic: serverStat(db: Database[Socket]): BsonDocument	
serverStat	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#serverStat,Database[AsyncSocket]	diagnostic: serverStat(db: Database[AsyncSocket]): Future[BsonDocument]	
shardConnPoolStats	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#shardConnPoolStats,Database[Socket]	diagnostic: shardConnPoolStats(db: Database[Socket]): BsonDocument	
shardConnPoolStats	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#shardConnPoolStats,Database[AsyncSocket]	diagnostic: shardConnPoolStats(db: Database[AsyncSocket]): Future[BsonDocument]	
top	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#top,Database[Socket]	diagnostic: top(db: Database[Socket]): BsonDocument	
top	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#top,Database[AsyncSocket]	diagnostic: top(db: Database[AsyncSocket]): Future[BsonDocument]	
validate	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#validate,Database[Socket],string	diagnostic: validate(db: Database[Socket]; coll: string; full = false): BsonDocument	
validate	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#validate,Database[AsyncSocket],string	diagnostic: validate(db: Database[AsyncSocket]; coll: string; full = false): Future[\n    BsonDocument]	
Diagnostics Commands	_._/_._/_._/_._/.nimble/pkgs/anonimongo-0.6.4/anonimongo/dbops/diagnostic.html#diagnostics-commands	 Diagnostics Commands	
