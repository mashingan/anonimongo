Role Management Methods	anonimongo/dbops/rolemgmt.html#role-management-methods	 Role Management Methods	
createRole	anonimongo/dbops/rolemgmt.html#createRole,Database[Socket],string,seq[BsonDocument],seq[BsonDocument],seq[BsonDocument]	rolemgmt: createRole(db: Database[Socket]; name: string;\n           privileges, roles: seq[BsonDocument];\n           authRestrict: seq[BsonDocument] = @[]; wt = bsonNull()): WriteResult	
createRole	anonimongo/dbops/rolemgmt.html#createRole,Database[AsyncSocket],string,seq[BsonDocument],seq[BsonDocument],seq[BsonDocument]	rolemgmt: createRole(db: Database[AsyncSocket]; name: string;\n           privileges, roles: seq[BsonDocument];\n           authRestrict: seq[BsonDocument] = @[]; wt = bsonNull()): Future[\n    WriteResult]	
updateRole	anonimongo/dbops/rolemgmt.html#updateRole,Database[Socket],string,seq[BsonDocument],seq[BsonDocument],seq[BsonDocument]	rolemgmt: updateRole(db: Database[Socket]; name: string;\n           privileges: seq[BsonDocument] = @[]; roles: seq[BsonDocument] = @[];\n           authRestrict: seq[BsonDocument] = @[]; wt = bsonNull()): WriteResult	
updateRole	anonimongo/dbops/rolemgmt.html#updateRole,Database[AsyncSocket],string,seq[BsonDocument],seq[BsonDocument],seq[BsonDocument]	rolemgmt: updateRole(db: Database[AsyncSocket]; name: string;\n           privileges: seq[BsonDocument] = @[]; roles: seq[BsonDocument] = @[];\n           authRestrict: seq[BsonDocument] = @[]; wt = bsonNull()): Future[\n    WriteResult]	
dropRole	anonimongo/dbops/rolemgmt.html#dropRole,Database[Socket],string	rolemgmt: dropRole(db: Database[Socket]; role: string; wt = bsonNull()): WriteResult	
dropRole	anonimongo/dbops/rolemgmt.html#dropRole,Database[AsyncSocket],string	rolemgmt: dropRole(db: Database[AsyncSocket]; role: string; wt = bsonNull()): Future[\n    WriteResult]	
dropAllRolesFromDatabase	anonimongo/dbops/rolemgmt.html#dropAllRolesFromDatabase,Database[Socket]	rolemgmt: dropAllRolesFromDatabase(db: Database[Socket]; wt = bsonNull()): WriteResult	
dropAllRolesFromDatabase	anonimongo/dbops/rolemgmt.html#dropAllRolesFromDatabase,Database[AsyncSocket]	rolemgmt: dropAllRolesFromDatabase(db: Database[AsyncSocket]; wt = bsonNull()): Future[\n    WriteResult]	
grantPrivilegesToRole	anonimongo/dbops/rolemgmt.html#grantPrivilegesToRole,Database[Socket],string,seq[BsonDocument]	rolemgmt: grantPrivilegesToRole(db: Database[Socket]; role: string;\n                      privileges: seq[BsonDocument]; wt = bsonNull()): WriteResult	
grantPrivilegesToRole	anonimongo/dbops/rolemgmt.html#grantPrivilegesToRole,Database[AsyncSocket],string,seq[BsonDocument]	rolemgmt: grantPrivilegesToRole(db: Database[AsyncSocket]; role: string;\n                      privileges: seq[BsonDocument]; wt = bsonNull()): Future[\n    WriteResult]	
grantRolesToRole	anonimongo/dbops/rolemgmt.html#grantRolesToRole,Database[Socket],string,seq[BsonDocument]	rolemgmt: grantRolesToRole(db: Database[Socket]; role: string; roles: seq[BsonDocument];\n                 wt = bsonNull()): WriteResult	
grantRolesToRole	anonimongo/dbops/rolemgmt.html#grantRolesToRole,Database[AsyncSocket],string,seq[BsonDocument]	rolemgmt: grantRolesToRole(db: Database[AsyncSocket]; role: string;\n                 roles: seq[BsonDocument]; wt = bsonNull()): Future[WriteResult]	
invalidateUserCache	anonimongo/dbops/rolemgmt.html#invalidateUserCache,Database[Socket]	rolemgmt: invalidateUserCache(db: Database[Socket]): WriteResult	
invalidateUserCache	anonimongo/dbops/rolemgmt.html#invalidateUserCache,Database[AsyncSocket]	rolemgmt: invalidateUserCache(db: Database[AsyncSocket]): Future[WriteResult]	
revokePrivilegesFromRole	anonimongo/dbops/rolemgmt.html#revokePrivilegesFromRole,Database[Socket],string,seq[BsonDocument]	rolemgmt: revokePrivilegesFromRole(db: Database[Socket]; role: string;\n                         privileges: seq[BsonDocument]; wt = bsonNull()): WriteResult	
revokePrivilegesFromRole	anonimongo/dbops/rolemgmt.html#revokePrivilegesFromRole,Database[AsyncSocket],string,seq[BsonDocument]	rolemgmt: revokePrivilegesFromRole(db: Database[AsyncSocket]; role: string;\n                         privileges: seq[BsonDocument]; wt = bsonNull()): Future[\n    WriteResult]	
revokeRolesFromRole	anonimongo/dbops/rolemgmt.html#revokeRolesFromRole,Database[Socket],string,seq[BsonDocument]	rolemgmt: revokeRolesFromRole(db: Database[Socket]; role: string;\n                    roles: seq[BsonDocument]; wt = bsonNull()): WriteResult	
revokeRolesFromRole	anonimongo/dbops/rolemgmt.html#revokeRolesFromRole,Database[AsyncSocket],string,seq[BsonDocument]	rolemgmt: revokeRolesFromRole(db: Database[AsyncSocket]; role: string;\n                    roles: seq[BsonDocument]; wt = bsonNull()): Future[\n    WriteResult]	
rolesInfo	anonimongo/dbops/rolemgmt.html#rolesInfo,Database[Socket],BsonBase	rolemgmt: rolesInfo(db: Database[Socket]; info: BsonBase; showPriv = false;\n          showBuiltin = false): ReplyFormat	
rolesInfo	anonimongo/dbops/rolemgmt.html#rolesInfo,Database[AsyncSocket],BsonBase	rolemgmt: rolesInfo(db: Database[AsyncSocket]; info: BsonBase; showPriv = false;\n          showBuiltin = false): Future[ReplyFormat]	
