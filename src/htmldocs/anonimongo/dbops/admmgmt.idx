nimTitle	admmgmt	anonimongo/dbops/admmgmt.html	module src/anonimongo/dbops/admmgmt		0
nim	create	anonimongo/dbops/admmgmt.html#create,Database[Socket],string,(bool, int, int),string,string,string,int	proc create(db: Database[Socket]; name: string; capsizemax = (false, 0, 0);\n       storageEngine = bsonNull(); validator = bsonNull();\n       validationLevel = "strict"; validationAction = "error";\n       indexOptionDefaults = bsonNull(); viewOn = ""; pipeline = bsonArray();\n       collation = bsonNull(); writeConcern = bsonNull();\n       expireAfterSeconds = 0; timeseries = bsonNull()): WriteResult		130
nim	create	anonimongo/dbops/admmgmt.html#create,Database[AsyncSocket],string,(bool, int, int),string,string,string,int	proc create(db: Database[AsyncSocket]; name: string; capsizemax = (false, 0, 0);\n       storageEngine = bsonNull(); validator = bsonNull();\n       validationLevel = "strict"; validationAction = "error";\n       indexOptionDefaults = bsonNull(); viewOn = ""; pipeline = bsonArray();\n       collation = bsonNull(); writeConcern = bsonNull();\n       expireAfterSeconds = 0; timeseries = bsonNull()): Future[WriteResult]		29
nim	createIndexes	anonimongo/dbops/admmgmt.html#createIndexes,Database[Socket],string,BsonBase	proc createIndexes(db: Database[Socket]; coll: string; indexes: BsonBase;\n              writeConcern = bsonNull(); commitQuorum = bsonNull();\n              comment = bsonNull()): WriteResult		130
nim	createIndexes	anonimongo/dbops/admmgmt.html#createIndexes,Database[AsyncSocket],string,BsonBase	proc createIndexes(db: Database[AsyncSocket]; coll: string; indexes: BsonBase;\n              writeConcern = bsonNull(); commitQuorum = bsonNull();\n              comment = bsonNull()): Future[WriteResult]		54
nim	dropCollection	anonimongo/dbops/admmgmt.html#dropCollection,Database[Socket],string	proc dropCollection(db: Database[Socket]; coll: string; wt = bsonNull();\n               comment = bsonNull()): WriteResult		130
nim	dropCollection	anonimongo/dbops/admmgmt.html#dropCollection,Database[AsyncSocket],string	proc dropCollection(db: Database[AsyncSocket]; coll: string; wt = bsonNull();\n               comment = bsonNull()): Future[WriteResult]		65
nim	dropDatabase	anonimongo/dbops/admmgmt.html#dropDatabase,Database[Socket]	proc dropDatabase(db: Database[Socket]; wt = bsonNull(); comment = bsonNull()): WriteResult		130
nim	dropDatabase	anonimongo/dbops/admmgmt.html#dropDatabase,Database[AsyncSocket]	proc dropDatabase(db: Database[AsyncSocket]; wt = bsonNull(); comment = bsonNull()): Future[\n    WriteResult]		72
nim	dropIndexes	anonimongo/dbops/admmgmt.html#dropIndexes,Database[Socket],string,BsonBase	proc dropIndexes(db: Database[Socket]; coll: string; indexes: BsonBase;\n            wt = bsonNull(); comment = bsonNull()): WriteResult		130
nim	dropIndexes	anonimongo/dbops/admmgmt.html#dropIndexes,Database[AsyncSocket],string,BsonBase	proc dropIndexes(db: Database[AsyncSocket]; coll: string; indexes: BsonBase;\n            wt = bsonNull(); comment = bsonNull()): Future[WriteResult]		79
nim	listCollections	anonimongo/dbops/admmgmt.html#listCollections,Database[Socket],string	proc listCollections(db: Database[Socket]; dbname = ""; filter = bsonNull();\n                nameonly = false; authorizedCollections = false;\n                comment = bsonNull()): seq[BsonBase]		130
nim	listCollections	anonimongo/dbops/admmgmt.html#listCollections,Database[AsyncSocket],string	proc listCollections(db: Database[AsyncSocket]; dbname = ""; filter = bsonNull();\n                nameonly = false; authorizedCollections = false;\n                comment = bsonNull()): Future[seq[BsonBase]]		89
nim	listCollectionNames	anonimongo/dbops/admmgmt.html#listCollectionNames,Database[Socket],string	proc listCollectionNames(db: Database[Socket]; dbname = ""): seq[string]		130
nim	listCollectionNames	anonimongo/dbops/admmgmt.html#listCollectionNames,Database[AsyncSocket],string	proc listCollectionNames(db: Database[AsyncSocket]; dbname = ""): Future[seq[string]]		108
nim	listDatabases	anonimongo/dbops/admmgmt.html#listDatabases,Database[Socket]	proc listDatabases(db: Database[Socket]; filter = bsonNull(); nameonly = false;\n              authorizedCollections = false; comment = bsonNull()): seq[BsonBase]		130
nim	listDatabases	anonimongo/dbops/admmgmt.html#listDatabases,Database[AsyncSocket]	proc listDatabases(db: Database[AsyncSocket]; filter = bsonNull(); nameonly = false;\n              authorizedCollections = false; comment = bsonNull()): Future[\n    seq[BsonBase]]		115
nim	listDatabaseNames	anonimongo/dbops/admmgmt.html#listDatabaseNames,Database[Socket]	proc listDatabaseNames(db: Database[Socket]): seq[string]		130
nim	listDatabaseNames	anonimongo/dbops/admmgmt.html#listDatabaseNames,Database[AsyncSocket]	proc listDatabaseNames(db: Database[AsyncSocket]): Future[seq[string]]		139
nim	listIndexes	anonimongo/dbops/admmgmt.html#listIndexes,Database[Socket],string	proc listIndexes(db: Database[Socket]; coll: string; comment = bsonNull()): seq[\n    BsonBase]		130
nim	listIndexes	anonimongo/dbops/admmgmt.html#listIndexes,Database[AsyncSocket],string	proc listIndexes(db: Database[AsyncSocket]; coll: string; comment = bsonNull()): Future[\n    seq[BsonBase]]		144
nim	renameCollection	anonimongo/dbops/admmgmt.html#renameCollection,Database[Socket],string,string	proc renameCollection(db: Database[Socket]; from, to: string; wt = bsonNull();\n                 comment = bsonNull()): WriteResult		130
nim	renameCollection	anonimongo/dbops/admmgmt.html#renameCollection,Database[AsyncSocket],string,string	proc renameCollection(db: Database[AsyncSocket]; from, to: string; wt = bsonNull();\n                 comment = bsonNull()): Future[WriteResult]		160
nim	shutdown	anonimongo/dbops/admmgmt.html#shutdown,Database[Socket],int	proc shutdown(db: Database[Socket]; force = false; timeout = 10; comment = bsonNull()): WriteResult		130
nim	shutdown	anonimongo/dbops/admmgmt.html#shutdown,Database[AsyncSocket],int	proc shutdown(db: Database[AsyncSocket]; force = false; timeout = 10;\n         comment = bsonNull()): Future[WriteResult]		174
nim	shutdown	anonimongo/dbops/admmgmt.html#shutdown,Mongo[Socket],int	proc shutdown(m: Mongo[Socket]; force = false; timeout = 10; comment = bsonNull()): WriteResult		130
nim	shutdown	anonimongo/dbops/admmgmt.html#shutdown,Mongo[AsyncSocket],int	proc shutdown(m: Mongo[AsyncSocket]; force = false; timeout = 10;\n         comment = bsonNull()): Future[WriteResult]		188
nim	currentOp	anonimongo/dbops/admmgmt.html#currentOp,Database[Socket]	proc currentOp(db: Database[Socket]; opt = bson()): BsonDocument		130
nim	currentOp	anonimongo/dbops/admmgmt.html#currentOp,Database[AsyncSocket]	proc currentOp(db: Database[AsyncSocket]; opt = bson()): Future[BsonDocument]		192
nim	killOp	anonimongo/dbops/admmgmt.html#killOp,Database[Socket],int32	proc killOp(db: Database[Socket]; opid: int32; comment = bsonNull()): WriteResult		130
nim	killOp	anonimongo/dbops/admmgmt.html#killOp,Database[AsyncSocket],int32	proc killOp(db: Database[AsyncSocket]; opid: int32; comment = bsonNull()): Future[\n    WriteResult]		206
nim	killCursors	anonimongo/dbops/admmgmt.html#killCursors,Database[Socket],string,seq[int64]	proc killCursors(db: Database[Socket]; collname: string; cursorIds: seq[int64]): BsonDocument		130
nim	killCursors	anonimongo/dbops/admmgmt.html#killCursors,Database[AsyncSocket],string,seq[int64]	proc killCursors(db: Database[AsyncSocket]; collname: string; cursorIds: seq[int64]): Future[\n    BsonDocument]		224
nim	setDefaultRWConcern	anonimongo/dbops/admmgmt.html#setDefaultRWConcern,Database[Socket]	proc setDefaultRWConcern(db: Database[Socket]; defaultReadConcern = bsonNull();\n                    defaultWriteConcern = bsonNull(); wt = bsonNull();\n                    comment = bsonNull()): BsonDocument		130
nim	setDefaultRWConcern	anonimongo/dbops/admmgmt.html#setDefaultRWConcern,Database[AsyncSocket]	proc setDefaultRWConcern(db: Database[AsyncSocket]; defaultReadConcern = bsonNull();\n                    defaultWriteConcern = bsonNull(); wt = bsonNull();\n                    comment = bsonNull()): Future[BsonDocument]		230
nim	getDefaultReadConcern	anonimongo/dbops/admmgmt.html#getDefaultReadConcern,Database[Socket]	proc getDefaultReadConcern(db: Database[Socket]; inMemory = false;\n                      comment = bsonNull()): BsonDocument		130
nim	getDefaultReadConcern	anonimongo/dbops/admmgmt.html#getDefaultReadConcern,Database[AsyncSocket]	proc getDefaultReadConcern(db: Database[AsyncSocket]; inMemory = false;\n                      comment = bsonNull()): Future[BsonDocument]		242
nimgrp	createindexes	anonimongo/dbops/admmgmt.html#createIndexes-procs-all	proc		52
nimgrp	killop	anonimongo/dbops/admmgmt.html#killOp-procs-all	proc		205
nimgrp	dropindexes	anonimongo/dbops/admmgmt.html#dropIndexes-procs-all	proc		78
nimgrp	listdatabases	anonimongo/dbops/admmgmt.html#listDatabases-procs-all	proc		114
nimgrp	shutdown	anonimongo/dbops/admmgmt.html#shutdown-procs-all	proc		173
nimgrp	listcollectionnames	anonimongo/dbops/admmgmt.html#listCollectionNames-procs-all	proc		107
nimgrp	listdatabasenames	anonimongo/dbops/admmgmt.html#listDatabaseNames-procs-all	proc		139
nimgrp	create	anonimongo/dbops/admmgmt.html#create-procs-all	proc		23
nimgrp	setdefaultrwconcern	anonimongo/dbops/admmgmt.html#setDefaultRWConcern-procs-all	proc		228
nimgrp	renamecollection	anonimongo/dbops/admmgmt.html#renameCollection-procs-all	proc		158
nimgrp	getdefaultreadconcern	anonimongo/dbops/admmgmt.html#getDefaultReadConcern-procs-all	proc		241
nimgrp	listindexes	anonimongo/dbops/admmgmt.html#listIndexes-procs-all	proc		143
nimgrp	dropcollection	anonimongo/dbops/admmgmt.html#dropCollection-procs-all	proc		64
nimgrp	dropdatabase	anonimongo/dbops/admmgmt.html#dropDatabase-procs-all	proc		71
nimgrp	killcursors	anonimongo/dbops/admmgmt.html#killCursors-procs-all	proc		223
nimgrp	currentop	anonimongo/dbops/admmgmt.html#currentOp-procs-all	proc		192
nimgrp	listcollections	anonimongo/dbops/admmgmt.html#listCollections-procs-all	proc		87
heading	Administration Commands	anonimongo/dbops/admmgmt.html#administration-commands	 Administration Commands		0
