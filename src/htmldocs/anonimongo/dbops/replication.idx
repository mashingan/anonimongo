nimTitle	replication	anonimongo/dbops/replication.html	module src/anonimongo/dbops/replication		0
nim	isMaster	anonimongo/dbops/replication.html#isMaster,Database[Socket]	proc isMaster(db: Database[Socket]; cmd = bson()): BsonDocument		130
nim	isMaster	anonimongo/dbops/replication.html#isMaster,Database[AsyncSocket]	proc isMaster(db: Database[AsyncSocket]; cmd = bson()): Future[BsonDocument]		5
nim	replSetAbortPrimaryCatchUp	anonimongo/dbops/replication.html#replSetAbortPrimaryCatchUp,Database[Socket]	proc replSetAbortPrimaryCatchUp(db: Database[Socket]): BsonDocument		130
nim	replSetAbortPrimaryCatchUp	anonimongo/dbops/replication.html#replSetAbortPrimaryCatchUp,Database[AsyncSocket]	proc replSetAbortPrimaryCatchUp(db: Database[AsyncSocket]): Future[BsonDocument]		16
nim	replSetFreeze	anonimongo/dbops/replication.html#replSetFreeze,Database[Socket],int	proc replSetFreeze(db: Database[Socket]; seconds: int): BsonDocument		130
nim	replSetFreeze	anonimongo/dbops/replication.html#replSetFreeze,Database[AsyncSocket],int	proc replSetFreeze(db: Database[AsyncSocket]; seconds: int): Future[BsonDocument]		19
nim	replSetGetConfig	anonimongo/dbops/replication.html#replSetGetConfig,Database[Socket],bool	proc replSetGetConfig(db: Database[Socket]; commitmentStatus: bool;\n                 comment = bsonNull()): BsonDocument		130
nim	replSetGetConfig	anonimongo/dbops/replication.html#replSetGetConfig,Database[AsyncSocket],bool	proc replSetGetConfig(db: Database[AsyncSocket]; commitmentStatus: bool;\n                 comment = bsonNull()): Future[BsonDocument]		23
nim	replSetGetStatus	anonimongo/dbops/replication.html#replSetGetStatus,Database[Socket]	proc replSetGetStatus(db: Database[Socket]): BsonDocument		130
nim	replSetGetStatus	anonimongo/dbops/replication.html#replSetGetStatus,Database[AsyncSocket]	proc replSetGetStatus(db: Database[AsyncSocket]): Future[BsonDocument]		32
nim	replSetInitiate	anonimongo/dbops/replication.html#replSetInitiate,Database[Socket],BsonDocument	proc replSetInitiate(db: Database[Socket]; config: BsonDocument): BsonDocument		130
nim	replSetInitiate	anonimongo/dbops/replication.html#replSetInitiate,Database[AsyncSocket],BsonDocument	proc replSetInitiate(db: Database[AsyncSocket]; config: BsonDocument): Future[\n    BsonDocument]		39
nim	replSetMaintenance	anonimongo/dbops/replication.html#replSetMaintenance,Database[Socket],bool	proc replSetMaintenance(db: Database[Socket]; enable: bool): BsonDocument		130
nim	replSetMaintenance	anonimongo/dbops/replication.html#replSetMaintenance,Database[AsyncSocket],bool	proc replSetMaintenance(db: Database[AsyncSocket]; enable: bool): Future[BsonDocument]		45
nim	replSetReconfig	anonimongo/dbops/replication.html#replSetReconfig,Database[Socket],BsonDocument,bool,int	proc replSetReconfig(db: Database[Socket]; newconfig: BsonDocument; force: bool;\n                maxTimeMS: int = -1): BsonDocument		130
nim	replSetReconfig	anonimongo/dbops/replication.html#replSetReconfig,Database[AsyncSocket],BsonDocument,bool,int	proc replSetReconfig(db: Database[AsyncSocket]; newconfig: BsonDocument; force: bool;\n                maxTimeMS: int = -1): Future[BsonDocument]		49
nim	replSetResizeOplog	anonimongo/dbops/replication.html#replSetResizeOplog,Database[Socket],float,float	proc replSetResizeOplog(db: Database[Socket]; size: float; minRetentionHours = 0.0): BsonDocument		130
nim	replSetResizeOplog	anonimongo/dbops/replication.html#replSetResizeOplog,Database[AsyncSocket],float,float	proc replSetResizeOplog(db: Database[AsyncSocket]; size: float;\n                   minRetentionHours = 0.0): Future[BsonDocument]		59
nim	replSetStepDown	anonimongo/dbops/replication.html#replSetStepDown,Database[Socket],int,int	proc replSetStepDown(db: Database[Socket]; stepDown: int; catchup = 10; force = false): BsonDocument		130
nim	replSetStepDown	anonimongo/dbops/replication.html#replSetStepDown,Database[AsyncSocket],int,int	proc replSetStepDown(db: Database[AsyncSocket]; stepDown: int; catchup = 10;\n                force = false): Future[BsonDocument]		68
nim	replSetSyncFrom	anonimongo/dbops/replication.html#replSetSyncFrom,Database[Socket],string	proc replSetSyncFrom(db: Database[Socket]; hostport: string): BsonDocument		130
nim	replSetSyncFrom	anonimongo/dbops/replication.html#replSetSyncFrom,Database[AsyncSocket],string	proc replSetSyncFrom(db: Database[AsyncSocket]; hostport: string): Future[\n    BsonDocument]		81
nimgrp	replsetgetstatus	anonimongo/dbops/replication.html#replSetGetStatus-procs-all	proc		32
nimgrp	replsetgetconfig	anonimongo/dbops/replication.html#replSetGetConfig-procs-all	proc		22
nimgrp	replsetfreeze	anonimongo/dbops/replication.html#replSetFreeze-procs-all	proc		19
nimgrp	replsetresizeoplog	anonimongo/dbops/replication.html#replSetResizeOplog-procs-all	proc		58
nimgrp	replsetstepdown	anonimongo/dbops/replication.html#replSetStepDown-procs-all	proc		67
nimgrp	replsetabortprimarycatchup	anonimongo/dbops/replication.html#replSetAbortPrimaryCatchUp-procs-all	proc		16
nimgrp	replsetmaintenance	anonimongo/dbops/replication.html#replSetMaintenance-procs-all	proc		44
nimgrp	replsetreconfig	anonimongo/dbops/replication.html#replSetReconfig-procs-all	proc		48
nimgrp	replsetsyncfrom	anonimongo/dbops/replication.html#replSetSyncFrom-procs-all	proc		81
nimgrp	ismaster	anonimongo/dbops/replication.html#isMaster-procs-all	proc		5
nimgrp	replsetinitiate	anonimongo/dbops/replication.html#replSetInitiate-procs-all	proc		38
